/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MainEstimateDealBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DealsApi
 */
@Disabled
public class DealsApiTest {

    private final DealsApi api = new DealsApi();

    /**
     * Estimate the cost of a deal
     *
     * This endpoint estimates the cost of a deal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsEstimatePostTest() throws ApiException {
        MainEstimateDealBody body = null;
        String response = api.dealsEstimatePost(body);
        // TODO: test validations
    }

    /**
     * Get storage failures
     *
     * This endpoint returns a list of storage failures
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsFailuresGetTest() throws ApiException {
        String response = api.dealsFailuresGet();
        // TODO: test validations
    }

    /**
     * Get Deal Info
     *
     * This endpoint returns the deal info for a deal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsInfoDealidGetTest() throws ApiException {
        Integer dealid = null;
        String response = api.dealsInfoDealidGet(dealid);
        // TODO: test validations
    }

    /**
     * Make Deal
     *
     * This endpoint makes a deal for a given content and miner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsMakeMinerPostTest() throws ApiException {
        String miner = null;
        String dealRequest = null;
        String response = api.dealsMakeMinerPost(miner, dealRequest);
        // TODO: test validations
    }

    /**
     * Get Proposal
     *
     * This endpoint returns the proposal for a deal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsProposalPropcidGetTest() throws ApiException {
        String propcid = null;
        String response = api.dealsProposalPropcidGet(propcid);
        // TODO: test validations
    }

    /**
     * Query Ask
     *
     * This endpoint returns the ask for a given CID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsQueryMinerGetTest() throws ApiException {
        String miner = null;
        String response = api.dealsQueryMinerGet(miner);
        // TODO: test validations
    }

    /**
     * Get Deal Status by PropCid
     *
     * Get Deal Status by PropCid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsStatusByProposalPropcidGetTest() throws ApiException {
        String propcid = null;
        String response = api.dealsStatusByProposalPropcidGet(propcid);
        // TODO: test validations
    }

    /**
     * Get Deal Status
     *
     * This endpoint returns the status of a deal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsStatusDealGetTest() throws ApiException {
        Integer deal = null;
        String response = api.dealsStatusDealGet(deal);
        // TODO: test validations
    }

    /**
     * Deal Status
     *
     * This endpoint returns the status of a deal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsStatusMinerPropcidGetTest() throws ApiException {
        String miner = null;
        String propcid = null;
        String response = api.dealsStatusMinerPropcidGet(miner, propcid);
        // TODO: test validations
    }

    /**
     * Transfer In Progress
     *
     * This endpoint returns the in-progress transfers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsTransferInProgressGetTest() throws ApiException {
        String response = api.dealsTransferInProgressGet();
        // TODO: test validations
    }

    /**
     * Transfer Status
     *
     * This endpoint returns the status of a transfer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealsTransferStatusPostTest() throws ApiException {
        String response = api.dealsTransferStatusPost();
        // TODO: test validations
    }

}
