/*
 * Estuary API
 * This is the API for the Estuary application.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublicApi
 */
@Disabled
public class PublicApiTest {

    private final PublicApi api = new PublicApi();

    /**
     * Get Content by Cid
     *
     * This endpoint returns the content associated with a CID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentByCidCidGetTest() throws ApiException {
        String cid = null;
        String response = api.contentByCidCidGet(cid);
        // TODO: test validations
    }

    /**
     * Get Content by Cid
     *
     * This endpoint returns the content associated with a CID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicByCidCidGetTest() throws ApiException {
        String cid = null;
        String response = api.publicByCidCidGet(cid);
        // TODO: test validations
    }

    /**
     * Get public node info
     *
     * This endpoint returns information about the node
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicInfoGetTest() throws ApiException {
        String response = api.publicInfoGet();
        // TODO: test validations
    }

    /**
     * Get deal metrics
     *
     * This endpoint is used to get deal metrics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicMetricsDealsOnChainGetTest() throws ApiException {
        String response = api.publicMetricsDealsOnChainGet();
        // TODO: test validations
    }

    /**
     * Get all miners deals
     *
     * This endpoint returns all miners deals
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicMinersDealsMinerGetTest() throws ApiException {
        String miner = null;
        String response = api.publicMinersDealsMinerGet(miner);
        // TODO: test validations
    }

    /**
     * Get all miners
     *
     * This endpoint returns all miners
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicMinersFailuresMinerGetTest() throws ApiException {
        String miner = null;
        String response = api.publicMinersFailuresMinerGet(miner);
        // TODO: test validations
    }

    /**
     * Get all miners
     *
     * This endpoint returns all miners
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicMinersGetTest() throws ApiException {
        String response = api.publicMinersGet();
        // TODO: test validations
    }

    /**
     * Get miner stats
     *
     * This endpoint returns miner stats
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicMinersStatsMinerGetTest() throws ApiException {
        String miner = null;
        String response = api.publicMinersStatsMinerGet(miner);
        // TODO: test validations
    }

    /**
     * Get miner stats
     *
     * This endpoint returns miner storage
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicMinersStorageQueryMinerGetTest() throws ApiException {
        String miner = null;
        String response = api.publicMinersStorageQueryMinerGet(miner);
        // TODO: test validations
    }

    /**
     * Net Addrs
     *
     * This endpoint is used to get net addrs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicNetAddrsGetTest() throws ApiException {
        List<String> response = api.publicNetAddrsGet();
        // TODO: test validations
    }

    /**
     * Net Peers
     *
     * This endpoint is used to get net peers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicNetPeersGetTest() throws ApiException {
        List<String> response = api.publicNetPeersGet();
        // TODO: test validations
    }

    /**
     * Public stats
     *
     * This endpoint is used to get public stats.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publicStatsGetTest() throws ApiException {
        String response = api.publicStatsGet();
        // TODO: test validations
    }

}
